Next Steps:
*************************************************************

Process answers:
* Update answersTable
* Update currentSkill
* If skill is at least 1 for all current types, advance level


MEJORAS TÉCNICAS
Logging

TEORÍA Y PREGUNTAS
Preguntar insistentemente sobre unas alteraciones concretas.
Preguntar insistentemente sobre una escala concreta (grado de escala)
Preguntar distancia de intervalos e intervalos de distancias.
Progresiones y cadencias.
Dada una secuencia armónica en un tono, pedir el cambio a otro tono y hacer preguntas sobre ambos.
Conocimiento de sustitución de acordes equivalentes.
Modulación.
Preguntas con audio.
Representación americana y en partitura.
Avanzado: mostrar standard, hacer memorizar y preguntar huecos, arreglos, etc.

PÁGINAS Y DISEÑO
Página principal (unlogged) describiendo la utilidad y motivación.
Página principal de usuario con estadísticas, acceso al juego, a los modos de entrenamiento y vista de los rankings.
Layout de to.do
Páginas con introducciones teóricas previas a cada nivel.
Teoría accesible a cada momento.
Ranking con puntuaciones.

SISTEMA DE JUEGO
Sistema de puntuación:
    Solo puntúa en modo de juego. El modo de entrenamiento sirve para mejorar la tasa de acierto.
    Solo se pasa de nivel tras X puntos y con una tasa de acierto X en todos los objetivos.
    Si no se cumple la tasa de acierto (de las últimas X preguntas), se dejará de puntuar hasta que se cumpla (más efectivo el modo de entrenamiento)
    Una vez cumplidos los objetivos de acierto, se pasa de nivel y se vuelve a puntuar.
Estadísticas de respuestas de usuarios: semanales, mensuales, de las últimas X preguntas y totales.
División de preguntas en niveles.
Modalidad de entrenamiento para preguntas específicas: mejora la tasa de acierto, pero no puntúa.
Explicación de respuestas.

...........................................................................

ALREADY DONE!

Framework integration (zend)
Chord recognition by using notes
Scales and keys
Fit chords in modes and scales
User management
PHPUnit integration
tables:
    answer (a giant log with all answers)
    answerId; userId(manyToOne); questionTypeId(manyToOne); skill(0,1,2); right(yes,no); timestamp

    questionsType
    questionTypeId; questionName; level

    userSkills (preprocessed info for level on each question type)
    userId (manyToOne); questionTypeId(manyToOne); currentSkill (0, 1, 2)

    User
    userId; userSkills (oneToMany); answer (oneToMany)

Generate Questions:
* more of lower skill
* check available skills for the user and update when necessary
* generate according to level and skill